Models: 
KNeighborsRegressor & LinearRegression

# Importing the required libraries 
from sklearn.neighbors import KNeighborsRegressor
from sklearn.linear_model import LinearRegression

#Building the KNeighborsRegressor model
knn_regressor = KNeighborsRegressor()
knn_regressor.fit(x_train_norm, y_train)

#Building the LinearRegression model
linear_regressor = LinearRegression()
linear_regressor.fit(x_train_norm, y_train)

#Making predictions on the traing set
linear_train_predictions = linear_regressor.predict(x_train_norm)


#Making predictions on the test test
linear_test_predictions = linear_regressor.predict(x_test_norm)

#Evaluation metrics 
from sklearn.metrics import mean_squared_error, r2_score

# Calculating the mean squared error on the training set 
linear_train_mse = mean_squared_error(y_train, linear_train_predictions)
print ('Linear Regression - training set mean squared error:', round(linear_train_mse,2))

# Calculating the mean squared error on the test set
linear_test_mse = mean_squared_error(y_test, linear_test_predictions)
print ('Linear Regression - Test set mean squredd error:', round(linear_test_mse,2))

#Calculating the mean squared the R2 score on the training set 
linear_train_r2 = r2_score(y_train, linear_train_predictions)
print('Linear Regression - Training set R2 score:', round(linear_train_r2,2))

#calculating the R2 score on the test set
linear_test_r2 = r2_score(y_test, linear_test_predictions)
print('Linear Regression - Test set R2 score:', round(linear_test_r2,2))
